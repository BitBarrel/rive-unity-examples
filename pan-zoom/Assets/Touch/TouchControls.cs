//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.8.2
//     from Assets/TouchControls/TouchControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine;

public partial class @TouchControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @TouchControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""TouchControls"",
    ""maps"": [
        {
            ""name"": ""Movement"",
            ""id"": ""dcd21c34-d745-4535-aa16-6f6b4263663c"",
            ""actions"": [
                {
                    ""name"": ""PrimaryFingerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""6e24c343-4ba7-4c18-88b0-ce69a2195c26"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryFingerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""9be49493-125f-4775-8e24-966124412fc6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseScrollPosition"",
                    ""type"": ""Value"",
                    ""id"": ""f3c61c15-47e6-472a-a4bf-0df96ddde5a3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseLeftClickMovePosition"",
                    ""type"": ""Button"",
                    ""id"": ""711b77f1-3608-4fd1-9f4f-47b3c0345a01"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touch0"",
                    ""type"": ""Button"",
                    ""id"": ""c63c3b38-d1a2-445c-bdcf-1cc41e8070a3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touch1"",
                    ""type"": ""Button"",
                    ""id"": ""96358f1a-8c97-4a22-812c-6ebbcf93f0ab"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a1253432-6977-4ec3-ad8d-b413d99b810c"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryFingerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe98b18f-48ee-4864-811f-41ac39b9ac90"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryFingerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90aae316-0661-4341-ba20-6a56a103398e"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScrollPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a031f1d5-4d93-43ca-a96c-7c05fcf47f27"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseLeftClickMovePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""e3360ca5-722e-47ea-864c-cac6da40daf9"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch0"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""c56bd8b6-fc65-4635-97f0-202c847db6ef"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""b52684d8-82b7-4fb1-90fa-a98ad2e88a0c"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""b0477e79-7503-4a5f-aa04-4a181281883b"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""81328609-7560-4e81-8e67-d2acceec097c"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""ad2e24f2-0689-486c-bc09-68bcc57f487e"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""New control scheme"",
            ""bindingGroup"": ""New control scheme"",
            ""devices"": []
        }
    ]
}");
        // Movement
        m_Movement = asset.FindActionMap("Movement", throwIfNotFound: true);
        m_Movement_PrimaryFingerPosition = m_Movement.FindAction("PrimaryFingerPosition", throwIfNotFound: true);
        m_Movement_SecondaryFingerPosition = m_Movement.FindAction("SecondaryFingerPosition", throwIfNotFound: true);
        m_Movement_MouseScrollPosition = m_Movement.FindAction("MouseScrollPosition", throwIfNotFound: true);
        m_Movement_MouseLeftClickMovePosition = m_Movement.FindAction("MouseLeftClickMovePosition", throwIfNotFound: true);
        m_Movement_Touch0 = m_Movement.FindAction("Touch0", throwIfNotFound: true);
        m_Movement_Touch1 = m_Movement.FindAction("Touch1", throwIfNotFound: true);
    }

    ~@TouchControls()
    {
        Debug.Assert(!m_Movement.enabled, "This will cause a leak and performance issues, TouchControls.Movement.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movement
    private readonly InputActionMap m_Movement;
    private List<IMovementActions> m_MovementActionsCallbackInterfaces = new List<IMovementActions>();
    private readonly InputAction m_Movement_PrimaryFingerPosition;
    private readonly InputAction m_Movement_SecondaryFingerPosition;
    private readonly InputAction m_Movement_MouseScrollPosition;
    private readonly InputAction m_Movement_MouseLeftClickMovePosition;
    private readonly InputAction m_Movement_Touch0;
    private readonly InputAction m_Movement_Touch1;
    public struct MovementActions
    {
        private @TouchControls m_Wrapper;
        public MovementActions(@TouchControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @PrimaryFingerPosition => m_Wrapper.m_Movement_PrimaryFingerPosition;
        public InputAction @SecondaryFingerPosition => m_Wrapper.m_Movement_SecondaryFingerPosition;
        public InputAction @MouseScrollPosition => m_Wrapper.m_Movement_MouseScrollPosition;
        public InputAction @MouseLeftClickMovePosition => m_Wrapper.m_Movement_MouseLeftClickMovePosition;
        public InputAction @Touch0 => m_Wrapper.m_Movement_Touch0;
        public InputAction @Touch1 => m_Wrapper.m_Movement_Touch1;
        public InputActionMap Get() { return m_Wrapper.m_Movement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovementActions set) { return set.Get(); }
        public void AddCallbacks(IMovementActions instance)
        {
            if (instance == null || m_Wrapper.m_MovementActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MovementActionsCallbackInterfaces.Add(instance);
            @PrimaryFingerPosition.started += instance.OnPrimaryFingerPosition;
            @PrimaryFingerPosition.performed += instance.OnPrimaryFingerPosition;
            @PrimaryFingerPosition.canceled += instance.OnPrimaryFingerPosition;
            @SecondaryFingerPosition.started += instance.OnSecondaryFingerPosition;
            @SecondaryFingerPosition.performed += instance.OnSecondaryFingerPosition;
            @SecondaryFingerPosition.canceled += instance.OnSecondaryFingerPosition;
            @MouseScrollPosition.started += instance.OnMouseScrollPosition;
            @MouseScrollPosition.performed += instance.OnMouseScrollPosition;
            @MouseScrollPosition.canceled += instance.OnMouseScrollPosition;
            @MouseLeftClickMovePosition.started += instance.OnMouseLeftClickMovePosition;
            @MouseLeftClickMovePosition.performed += instance.OnMouseLeftClickMovePosition;
            @MouseLeftClickMovePosition.canceled += instance.OnMouseLeftClickMovePosition;
            @Touch0.started += instance.OnTouch0;
            @Touch0.performed += instance.OnTouch0;
            @Touch0.canceled += instance.OnTouch0;
            @Touch1.started += instance.OnTouch1;
            @Touch1.performed += instance.OnTouch1;
            @Touch1.canceled += instance.OnTouch1;
        }

        private void UnregisterCallbacks(IMovementActions instance)
        {
            @PrimaryFingerPosition.started -= instance.OnPrimaryFingerPosition;
            @PrimaryFingerPosition.performed -= instance.OnPrimaryFingerPosition;
            @PrimaryFingerPosition.canceled -= instance.OnPrimaryFingerPosition;
            @SecondaryFingerPosition.started -= instance.OnSecondaryFingerPosition;
            @SecondaryFingerPosition.performed -= instance.OnSecondaryFingerPosition;
            @SecondaryFingerPosition.canceled -= instance.OnSecondaryFingerPosition;
            @MouseScrollPosition.started -= instance.OnMouseScrollPosition;
            @MouseScrollPosition.performed -= instance.OnMouseScrollPosition;
            @MouseScrollPosition.canceled -= instance.OnMouseScrollPosition;
            @MouseLeftClickMovePosition.started -= instance.OnMouseLeftClickMovePosition;
            @MouseLeftClickMovePosition.performed -= instance.OnMouseLeftClickMovePosition;
            @MouseLeftClickMovePosition.canceled -= instance.OnMouseLeftClickMovePosition;
            @Touch0.started -= instance.OnTouch0;
            @Touch0.performed -= instance.OnTouch0;
            @Touch0.canceled -= instance.OnTouch0;
            @Touch1.started -= instance.OnTouch1;
            @Touch1.performed -= instance.OnTouch1;
            @Touch1.canceled -= instance.OnTouch1;
        }

        public void RemoveCallbacks(IMovementActions instance)
        {
            if (m_Wrapper.m_MovementActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMovementActions instance)
        {
            foreach (var item in m_Wrapper.m_MovementActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MovementActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MovementActions @Movement => new MovementActions(this);
    private int m_NewcontrolschemeSchemeIndex = -1;
    public InputControlScheme NewcontrolschemeScheme
    {
        get
        {
            if (m_NewcontrolschemeSchemeIndex == -1) m_NewcontrolschemeSchemeIndex = asset.FindControlSchemeIndex("New control scheme");
            return asset.controlSchemes[m_NewcontrolschemeSchemeIndex];
        }
    }
    public interface IMovementActions
    {
        void OnPrimaryFingerPosition(InputAction.CallbackContext context);
        void OnSecondaryFingerPosition(InputAction.CallbackContext context);
        void OnMouseScrollPosition(InputAction.CallbackContext context);
        void OnMouseLeftClickMovePosition(InputAction.CallbackContext context);
        void OnTouch0(InputAction.CallbackContext context);
        void OnTouch1(InputAction.CallbackContext context);
    }
}
